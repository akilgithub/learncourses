
1st interview
++==++===+++
  
Map<Integer,String> map=new HashMap();
  map.put(1,"a");
  map.put(2,"b");
  map.put(3,"c");
  map.put(2,"d");
  map.put(null,null);
  map.put(4,"null");
  
  Set set=map.entrySet();
  Iterator i=set.iterator();
  while(i.hasNext()){
  Map.Entry entry=(Map.Entry)i.next();
  System.out.println(i.getKey()+""+i.getValue());
  }
 
  
  class A extends RunException{
  
  
  public void ab() throws Exception{
  
  
    }
  }
  
  function c=(a,b)->a+b;
  select * from employee ORDER BY salary(MAX);
 
 
 
 2nd interview
++====+++===+++


 import java.util.*;

class HelloWorld {
    public static void main(String[] args) {
        List<String> l=new ArrayList();
        l.add("chetan");
        l.add("java");
        l.add("akhil");
    long count = l.stream().filter(str->str.length()>3).count();
        System.out.println(count);
    }
}


3Rd interview
++==++==++==
Manikandan B15:11
public class Main {
		public static void main(String[] args) {
			int[] array = new int[]{1, 2, 3, 4,6};
			int[] evens = getOdds(array);
			System.out.println(evens[0] + " " + evens[1]);
		}

		public static int[] getOdds(int[] array) {
			int evenOne = 0;
			int evenSecond = 0;
        for (int i = 0; i < array.length; ++i) {
if (evenOne == 0 && array[i] % 2 == 0) {
                evenOne = array[i];
            } else if (evenSecond == 0 && array[i] % 2 == 0) {
                evenSecond = array[i];
            } else if (evenOne != 0 && evenSecond != 0) {
                return new int[]{evenSecond, evenOne};
            }
        }

        return new int[]{evenOne, evenSecond};
    }
}
You15:13
1  2
Manikandan B15:27
Input : -5, 4, 3, -4, 6
Output : -5, -4, 4, 3, 6
VUNNA AKHIL KUMAR_Java + Microservices_12Sep23(Tues)_3:00PM

4th Interview
++==++==++===
print the in b/w of [] string values

class StringSplit{
public static void main(String[] args){
  String s="abcdef[ghijklm]nopq";
  
  s.subString(6,14);
  
  for(int i=0;i<s.length();i++)
  {
    if(s.char[i]
  
  
 }
}

5th Interview
==+++==+++==++
l.stream().filter(a->{a.age<25}).map(a->a.age&&a.name).forEach(System.out::println);  

6th Interview
==++==++==+++==
Map<Integer,String> map=new HashMap<>();
   map.put(1,"A");
   map.put(2,"B");
   
   Set s=map.entrySet();
   Iterator i= s.iterator();
   for(Map.Entry maps:map){
   Map.Entry e=(Map.Entry)maps;
   System.out.println(e.getKey()+" "+e.getValue());}
   
   map.stream().filter(
   
7th Interview
==+++==++===++
 /* how to define a string and stringBuiler,StringBuffer with proper example */
  class DemoString{
     public static void main(String[] args){
	 
       String s="read";
	   StringBuilder sb=new StringBuilder();
	   StringBuffer sbf=new StringBuffer();
	   sb.reverse(s
	       
	  }
	  
	}
   
  /* the internal process of a map algorithm and data structure  with defined process explain */
   
   class DemoHashMap{
       public static void main(String[] args){
	   
	   Map<Integer,String> map=new HashMap<>();
	   map.put(1,"a");
	   map.put(2,"b");
	   map.put(3,"d");
	   
	   Set s=map.entrySet();
	   Iterator i=s.iterator();
	   while(i.hasNext()){
	   Map.Entry m=(Map.Entry)i.next();
	   System.out.println(m.getKey()+" "+m.getValue());
	   }
	  }
   }	  
   /* multithreading concept build a bank to send debiting mail dedctions programme */
   class Bank extends Thread{
      public trigger(){
	    System.out.println("debiting the amount");
	  }
	  public void run(){
	    
	  }
	  public static void main(String[] args){
	   Bank b=new Bank();
	   
	  }
	  
  /* Given json process to convert a sorted order with respect of key to print */   
	  {
  "id":"123",
  "name":"akhil",
 "type":"VISA",
  "bank":"ICICI",
  "cvv":"123",
  "expDate":"12/26"
}
	  map.stream().filter(e->e.getKeyComparingTo(sorted)).collect(Collectors.getKey(toString));
	  

